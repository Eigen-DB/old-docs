openapi: 3.0.3
info:
  title: Vector API
  description: API for inserting vectors into the system.
  version: 1.0.0
paths:
  /vector/insert:
    put:
      summary: Insert a vector
      operationId: insertVector
      description: Inserts a vector into the database.
      requestBody:
        description:  The N components of the N-dimensional vector to be inserted.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - components
              properties:
                components:
                  type: array
                  items:
                    type: number
                    format: float
                  description: Array of vector components (float32[]).
      responses:
        '200':
          description: Vector successfully inserted.
          content:
            text/plain:
              schema:
                type: string
                example: Vector successfully inserted.
        '400':
          description: Invalid request or incorrect dimensionality.
          content:
            text/plain:
              schema:
                type: string
                example: vector provided had the wrong dimensionality
  
  
  
  /vector/bulk-insert:
    put:
      summary: Insert many vectors
      operationId: bulkInsertVectors
      description: Insert many vectors at once into the database.
      requestBody:
        description: A list of the vectors to be inserted. Each vector is represented by their components.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - setOfComponents
              properties:
                setOfComponents:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                      format: float
                  description: Array of vectors, each represented by their components (float32[][]).
      responses:
        '200':
          description: Vectors successfully inserted.
          content:
            text/plain:
              schema:
                type: string
                example: 10/10 vectors successfully inserted.
  


  /vector/search:
    get:
      summary: Perform similarity search
      operationId: searchVector
      description: Perform similarity search on a query vector.
      requestBody:
        description: The query vector's ID and the number of nearest vectors desired. 
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - queryVectorId
                - k
              properties:
                queryVectorId:
                  type: number
                  format: int
                  description: ID of the query vector (int).
                k:
                  type: number
                  format: int
                  description: K-nearest vectors desired (int).
      responses:
        '200':
          description: \5 nearest vectors returned (k = 5)
          content:
            text/plain:
              schema:
                type: array
                example: \[4,7,2,8,5\]


